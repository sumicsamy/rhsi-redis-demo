
namespace: redis-sentinel
serviceAccount:
  imagePullSecrets:
    name1: docker-registry1-pull-secret


redisSentinel:
  master:
    replicaCount: 1
    command: ["sh", "-c", "cp /usr/local/etc/redis/redis.conf /tmp/redis.conf && echo \"requirepass ${REDIS_PASSWORD}\" >> /tmp/redis.conf && echo \"masterauth ${REDIS_PASSWORD}\" >> /tmp/redis.conf && redis-server /tmp/redis.conf"]
    volumeMounts:
      subPath: redis.conf
      dataMountPath: /data
      configMountPath: /usr/local/etc/redis/redis.conf
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    service:
      type: Headless    #set it as LoadBalancer or ClusterIP if you need to create clusterIP service or to use load balancer for external connectivity.
      port: 6379
      loadBalancerIP: 
  slave:
    replicaCount: 2
    command: ["sh", "-c", "redis-server /usr/local/etc/redis/redis.conf --replicaof redis-master.redis-sentinel.svc.cluster.local 6379 --masterauth ${REDIS_PASSWORD} "]
    service:
      type: Headless    #set it as LoadBalancer or ClusterIP if you need to create clusterIP service or to use load balancer for external connectivity.
      port: 6379
  sentinel:
    replicaCount: 3
    command: ["sh", "-c", "cp /usr/local/etc/redis/sentinel.conf /tmp/sentinel.conf && echo \"sentinel auth-pass mymaster ${REDIS_PASSWORD}\" >> /tmp/setinel.conf && redis-server /tmp/sentinel.conf --sentinel"]
    volumeMounts:
      subPath: sentinel.conf
      secretMountPath: /etc/redis-password
      configMountPath: /usr/local/etc/redis/sentinel.conf
      readOnly: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    service:
      type: Headless    #set it as LoadBalancer or ClusterIP if you need to create clusterIP service or to use load balancer for external connectivity.
      sentinelPort: 26379
  volumeClaimTemplates:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 1Gi
  image:
    repository: redis:7.2.4
    pullPolicy: IfNotPresent
    tag: latest
  secret:
    redisPassword: cmVkaXNfcGFzc3dvcmQK   #password must be in base64 encrypted format
  redisConfig: |
     bind 0.0.0.0
     protected-mode no
     port 6379
     dir /data
     appendonly no
     save ""
     maxmemory-policy allkeys-lru
     maxmemory 536870912
  sentinelConfig: |
     port 26379
     dir /data
     sentinel monitor mymaster redis-master.redis-sentinel.svc.cluster.local 6379 2
     sentinel down-after-milliseconds mymaster 5000
     sentinel parallel-syncs mymaster 1
     sentinel failover-timeout mymaster 10000
  selector:
    app: redis
    role1: master
    role2: replica
    role3: sentinel
  securityContext:
    privileged: false  #make it true only when needs root privileges
    allowPrivilegeEscalation: false  #make it true only when needs root privileges
